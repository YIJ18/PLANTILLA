# Generated by Django 4.2.7 on 2025-10-11 23:17

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('telemetry', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Flight',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('flight_number', models.CharField(help_text='Número único del vuelo', max_length=50, unique=True)),
                ('aircraft_id', models.CharField(help_text='Identificador de la aeronave', max_length=100)),
                ('status', models.CharField(choices=[('pre_flight', 'Pre-vuelo'), ('active', 'En vuelo'), ('landed', 'Aterrizado'), ('emergency', 'Emergencia'), ('aborted', 'Abortado')], default='pre_flight', help_text='Estado actual del vuelo', max_length=20)),
                ('departure_location', models.CharField(help_text='Ubicación de despegue', max_length=200)),
                ('destination_location', models.CharField(help_text='Ubicación de destino', max_length=200)),
                ('departure_latitude', models.FloatField(blank=True, help_text='Latitud del punto de despegue', null=True)),
                ('departure_longitude', models.FloatField(blank=True, help_text='Longitud del punto de despegue', null=True)),
                ('destination_latitude', models.FloatField(blank=True, help_text='Latitud del destino', null=True)),
                ('destination_longitude', models.FloatField(blank=True, help_text='Longitud del destino', null=True)),
                ('planned_departure', models.DateTimeField(help_text='Hora planificada de despegue')),
                ('planned_arrival', models.DateTimeField(help_text='Hora planificada de llegada')),
                ('actual_departure', models.DateTimeField(blank=True, help_text='Hora real de despegue', null=True)),
                ('actual_arrival', models.DateTimeField(blank=True, help_text='Hora real de llegada', null=True)),
                ('max_altitude', models.FloatField(blank=True, help_text='Altitud máxima alcanzada (metros)', null=True)),
                ('max_speed', models.FloatField(blank=True, help_text='Velocidad máxima alcanzada (m/s)', null=True)),
                ('distance_traveled', models.FloatField(blank=True, help_text='Distancia total recorrida (km)', null=True)),
                ('fuel_consumed', models.FloatField(blank=True, help_text='Combustible consumido (litros)', null=True)),
                ('notes', models.TextField(blank=True, help_text='Notas adicionales del vuelo')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Vuelo',
                'verbose_name_plural': 'Vuelos',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Mission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Nombre de la misión', max_length=200)),
                ('description', models.TextField(blank=True, help_text='Descripción detallada de la misión')),
                ('status', models.CharField(choices=[('planned', 'Planificada'), ('active', 'Activa'), ('completed', 'Completada'), ('cancelled', 'Cancelada'), ('emergency', 'Emergencia')], default='planned', help_text='Estado actual de la misión', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Baja'), ('medium', 'Media'), ('high', 'Alta'), ('critical', 'Crítica')], default='medium', help_text='Prioridad de la misión', max_length=10)),
                ('planned_start', models.DateTimeField(help_text='Fecha y hora planificada de inicio')),
                ('planned_end', models.DateTimeField(help_text='Fecha y hora planificada de finalización')),
                ('actual_start', models.DateTimeField(blank=True, help_text='Fecha y hora real de inicio', null=True)),
                ('actual_end', models.DateTimeField(blank=True, help_text='Fecha y hora real de finalización', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_to', models.ManyToManyField(blank=True, help_text='Usuarios asignados a la misión', related_name='assigned_missions', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(help_text='Usuario que creó la misión', on_delete=django.db.models.deletion.CASCADE, related_name='created_missions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Misión',
                'verbose_name_plural': 'Misiones',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FlightTelemetrySession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(help_text='Inicio de la sesión de telemetría')),
                ('end_time', models.DateTimeField(blank=True, help_text='Fin de la sesión de telemetría', null=True)),
                ('flight', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='telemetry_sessions', to='flights.flight')),
                ('gyroscope_data', models.ManyToManyField(blank=True, help_text='Datos de giroscopio asociados', related_name='flight_sessions', to='telemetry.gyroscopedata')),
                ('telemetry_data', models.ManyToManyField(blank=True, help_text='Datos de telemetría asociados', related_name='flight_sessions', to='telemetry.telemetrydata')),
            ],
            options={
                'verbose_name': 'Sesión de Telemetría de Vuelo',
                'verbose_name_plural': 'Sesiones de Telemetría de Vuelo',
                'ordering': ['-start_time'],
            },
        ),
        migrations.AddField(
            model_name='flight',
            name='mission',
            field=models.ForeignKey(help_text='Misión a la que pertenece el vuelo', on_delete=django.db.models.deletion.CASCADE, related_name='flights', to='flights.mission'),
        ),
        migrations.AddField(
            model_name='flight',
            name='pilot',
            field=models.ForeignKey(help_text='Piloto del vuelo', on_delete=django.db.models.deletion.CASCADE, related_name='piloted_flights', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='FlightPath',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(help_text='Momento de la posición')),
                ('latitude', models.FloatField(help_text='Latitud de la posición')),
                ('longitude', models.FloatField(help_text='Longitud de la posición')),
                ('altitude', models.FloatField(help_text='Altitud en metros')),
                ('speed', models.FloatField(blank=True, help_text='Velocidad en m/s', null=True)),
                ('heading', models.FloatField(blank=True, help_text='Rumbo en grados', null=True)),
                ('flight', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flight_path', to='flights.flight')),
            ],
            options={
                'verbose_name': 'Punto de Ruta',
                'verbose_name_plural': 'Puntos de Ruta',
                'ordering': ['flight', 'timestamp'],
                'indexes': [models.Index(fields=['flight', 'timestamp'], name='flights_fli_flight__e4bd69_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='flight',
            index=models.Index(fields=['status', 'planned_departure'], name='flights_fli_status_e1c5e1_idx'),
        ),
        migrations.AddIndex(
            model_name='flight',
            index=models.Index(fields=['flight_number'], name='flights_fli_flight__794da4_idx'),
        ),
    ]
